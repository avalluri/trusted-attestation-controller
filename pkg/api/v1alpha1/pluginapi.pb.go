//
//Copyright 2022.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: pkg/api/v1alpha1/pluginapi.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uniq name of the server
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Server socket address to register;
	// This server has to offers Plugin functionality
	// at this socket.
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *RegisterPluginRequest) Reset() {
	*x = RegisterPluginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPluginRequest) ProtoMessage() {}

func (x *RegisterPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPluginRequest.ProtoReflect.Descriptor instead.
func (*RegisterPluginRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1alpha1_pluginapi_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterPluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterPluginRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RegisterKeyServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterKeyServerReply) Reset() {
	*x = RegisterKeyServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterKeyServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterKeyServerReply) ProtoMessage() {}

func (x *RegisterKeyServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterKeyServerReply.ProtoReflect.Descriptor instead.
func (*RegisterKeyServerReply) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1alpha1_pluginapi_proto_rawDescGZIP(), []int{1}
}

type ValidateQuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CA signer name
	SignerName string `protobuf:"bytes,1,opt,name=signerName,proto3" json:"signerName,omitempty"`
	// base64 encoded public key used for generating the quote
	PublicKey []byte `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	// base64 encoded SGX Quote
	Quote []byte `protobuf:"bytes,3,opt,name=quote,proto3" json:"quote,omitempty"`
	// base64 encoded nonce used for generating the SGX quote
	Nonce []byte `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *ValidateQuoteRequest) Reset() {
	*x = ValidateQuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateQuoteRequest) ProtoMessage() {}

func (x *ValidateQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateQuoteRequest.ProtoReflect.Descriptor instead.
func (*ValidateQuoteRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1alpha1_pluginapi_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateQuoteRequest) GetSignerName() string {
	if x != nil {
		return x.SignerName
	}
	return ""
}

func (x *ValidateQuoteRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ValidateQuoteRequest) GetQuote() []byte {
	if x != nil {
		return x.Quote
	}
	return nil
}

func (x *ValidateQuoteRequest) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type ValidateQuoteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	// Failure message in case of provided quote is invalid
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ValidateQuoteReply) Reset() {
	*x = ValidateQuoteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateQuoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateQuoteReply) ProtoMessage() {}

func (x *ValidateQuoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateQuoteReply.ProtoReflect.Descriptor instead.
func (*ValidateQuoteReply) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1alpha1_pluginapi_proto_rawDescGZIP(), []int{3}
}

func (x *ValidateQuoteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ValidateQuoteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetCAKeyAndCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CA signer name
	SignerName string `protobuf:"bytes,1,opt,name=signerName,proto3" json:"signerName,omitempty"`
	// base64 encoded public key used for generating the quote
	PublicKey []byte `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	// base64 encoded SGX Quote
	Quote []byte `protobuf:"bytes,3,opt,name=quote,proto3" json:"quote,omitempty"`
	// base64 encoded nonce used for generating the SGX quote
	Nonce []byte `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *GetCAKeyAndCertificateRequest) Reset() {
	*x = GetCAKeyAndCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCAKeyAndCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCAKeyAndCertificateRequest) ProtoMessage() {}

func (x *GetCAKeyAndCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCAKeyAndCertificateRequest.ProtoReflect.Descriptor instead.
func (*GetCAKeyAndCertificateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1alpha1_pluginapi_proto_rawDescGZIP(), []int{4}
}

func (x *GetCAKeyAndCertificateRequest) GetSignerName() string {
	if x != nil {
		return x.SignerName
	}
	return ""
}

func (x *GetCAKeyAndCertificateRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *GetCAKeyAndCertificateRequest) GetQuote() []byte {
	if x != nil {
		return x.Quote
	}
	return nil
}

func (x *GetCAKeyAndCertificateRequest) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type GetCAKeyAndCertificateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The CA private key(PWK) is wrapped with a symmetric key(SWK)
	// that was wrapped with the given publicKey. Both the SWK and
	// PWK are concatenated and returned as single base64 encoded block.
	WrappedKey []byte `protobuf:"bytes,1,opt,name=wrappedKey,proto3" json:"wrappedKey,omitempty"`
	// base64 encoded PEM certificate
	Certificate []byte `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *GetCAKeyAndCertificateReply) Reset() {
	*x = GetCAKeyAndCertificateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCAKeyAndCertificateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCAKeyAndCertificateReply) ProtoMessage() {}

func (x *GetCAKeyAndCertificateReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCAKeyAndCertificateReply.ProtoReflect.Descriptor instead.
func (*GetCAKeyAndCertificateReply) Descriptor() ([]byte, []int) {
	return file_pkg_api_v1alpha1_pluginapi_proto_rawDescGZIP(), []int{5}
}

func (x *GetCAKeyAndCertificateReply) GetWrappedKey() []byte {
	if x != nil {
		return x.WrappedKey
	}
	return nil
}

func (x *GetCAKeyAndCertificateReply) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

var File_pkg_api_v1alpha1_pluginapi_proto protoreflect.FileDescriptor

var file_pkg_api_v1alpha1_pluginapi_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x45, 0x0a, 0x15,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x80, 0x01,
	0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x22, 0x46, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x43, 0x41, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x41, 0x4b, 0x65, 0x79,
	0x41, 0x6e, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x32, 0x61, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x12, 0x55, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xc5, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x12, 0x4f, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x41, 0x4b, 0x65, 0x79,
	0x41, 0x6e, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x41, 0x4b,
	0x65, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x41, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x6c, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_api_v1alpha1_pluginapi_proto_rawDescOnce sync.Once
	file_pkg_api_v1alpha1_pluginapi_proto_rawDescData = file_pkg_api_v1alpha1_pluginapi_proto_rawDesc
)

func file_pkg_api_v1alpha1_pluginapi_proto_rawDescGZIP() []byte {
	file_pkg_api_v1alpha1_pluginapi_proto_rawDescOnce.Do(func() {
		file_pkg_api_v1alpha1_pluginapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_api_v1alpha1_pluginapi_proto_rawDescData)
	})
	return file_pkg_api_v1alpha1_pluginapi_proto_rawDescData
}

var file_pkg_api_v1alpha1_pluginapi_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_api_v1alpha1_pluginapi_proto_goTypes = []interface{}{
	(*RegisterPluginRequest)(nil),         // 0: v1alpha1.RegisterPluginRequest
	(*RegisterKeyServerReply)(nil),        // 1: v1alpha1.RegisterKeyServerReply
	(*ValidateQuoteRequest)(nil),          // 2: v1alpha1.ValidateQuoteRequest
	(*ValidateQuoteReply)(nil),            // 3: v1alpha1.ValidateQuoteReply
	(*GetCAKeyAndCertificateRequest)(nil), // 4: v1alpha1.GetCAKeyAndCertificateRequest
	(*GetCAKeyAndCertificateReply)(nil),   // 5: v1alpha1.GetCAKeyAndCertificateReply
}
var file_pkg_api_v1alpha1_pluginapi_proto_depIdxs = []int32{
	0, // 0: v1alpha1.Registry.RegisterPlugin:input_type -> v1alpha1.RegisterPluginRequest
	2, // 1: v1alpha1.Plugin.ValidateQuote:input_type -> v1alpha1.ValidateQuoteRequest
	4, // 2: v1alpha1.Plugin.GetCAKeyAndCertificate:input_type -> v1alpha1.GetCAKeyAndCertificateRequest
	1, // 3: v1alpha1.Registry.RegisterPlugin:output_type -> v1alpha1.RegisterKeyServerReply
	3, // 4: v1alpha1.Plugin.ValidateQuote:output_type -> v1alpha1.ValidateQuoteReply
	5, // 5: v1alpha1.Plugin.GetCAKeyAndCertificate:output_type -> v1alpha1.GetCAKeyAndCertificateReply
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_api_v1alpha1_pluginapi_proto_init() }
func file_pkg_api_v1alpha1_pluginapi_proto_init() {
	if File_pkg_api_v1alpha1_pluginapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPluginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterKeyServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateQuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateQuoteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCAKeyAndCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_api_v1alpha1_pluginapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCAKeyAndCertificateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_api_v1alpha1_pluginapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_api_v1alpha1_pluginapi_proto_goTypes,
		DependencyIndexes: file_pkg_api_v1alpha1_pluginapi_proto_depIdxs,
		MessageInfos:      file_pkg_api_v1alpha1_pluginapi_proto_msgTypes,
	}.Build()
	File_pkg_api_v1alpha1_pluginapi_proto = out.File
	file_pkg_api_v1alpha1_pluginapi_proto_rawDesc = nil
	file_pkg_api_v1alpha1_pluginapi_proto_goTypes = nil
	file_pkg_api_v1alpha1_pluginapi_proto_depIdxs = nil
}
